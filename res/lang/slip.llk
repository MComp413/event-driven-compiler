<syntax>
  Program -> Expression RestProgram
  RestProgram -> Expression RestProgram
  RestProgram -> Empty

  Expression -> Atom
  Expression -> List
  
  List -> ( KeywordCall
  List -> ( Arithmetic
  List -> ( Comparison
  List -> ( Logical
  List -> ( HeadList RestList

  KeywordCall -> If
  KeywordCall -> IfElse
  KeywordCall -> DoList
  KeywordCall -> For
  KeywordCall -> While
  KeywordCall -> Def
  KeywordCall -> Set
  KeywordCall -> Vector
  KeywordCall -> VecGet
  KeywordCall -> VecSet
  KeywordCall -> Label
  KeywordCall -> GoTo
  KeywordCall -> IfGoTo
  KeywordCall -> Print
  KeywordCall -> Read

  Arithmetic -> Add
  Arithmetic -> Subtract
  Arithmetic -> Multiply
  Arithmetic -> Divide
  
  Comparison -> Equals
  Comparison -> NotEqual
  Comparison -> Not
  Comparison -> Greater
  Comparison -> Lesser
  Comparison -> GreaterEqual
  Comparison -> LesserEqual

  Logical -> Or
  Logical -> And
  Logical -> Not

  Add -> + RestBinary
  Subtract -> - RestBinary
  Multiply -> * RestBinary
  Divide -> / RestBinary
  
  Equals -> = RestBinary
  NotEqual -> != RestBinary
  Greater -> > RestBinary
  Lesser -> < RestBinary
  GreaterEqual -> >= RestBinary
  LesserEqual -> <= RestBinary

  Or -> || RestBinary
  And -> && RestBinary
  Not -> ! RestUnary

  RestBinary -> Expression Expression )
  RestUnary -> Expression )

  Atom -> String
  Atom -> Integer
  Atom -> Identifier
  Atom -> Boolean
  
  
  HeadList -> Identifier
  HeadList -> List

  RestList -> Expression RestList
  RestList -> )

  If -> IF Expression Expression )
  IfElse -> IFELSE Expression Expression Expression )

  DoList -> DO RestList

  For -> FOR Identifier Expression Expression Expression RestList
  While -> WHILE Expression RestList

  Params -> PARAMS RestParamsList
  RestParams -> Identifier RestParams
  RestParams -> )

  Def -> DEF Identifier Params RestList
  Set -> SET Identifier Expression )

  Vector -> VECTOR RestList
  VecGet -> VECGET Identifier Expression )
  VecSet -> VECSET Identifier Expression Expression )

  Label -> # Identifier Expression )
  GoTo -> GOTO Identifier )
  IfGoTo -> IFGOTO Expression Identifier )

  Print -> PRINT Expression )
  Read -> READ String )

</syntax>

<lexicon>
  Integer -> Digit RestInteger
  RestInteger -> Digit RestInteger
  RestInteger -> Empty

  String -> " Ascii RestString
  RestString -> Ascii RestString
  RestString -> "

  Identifier -> Letter RestIdentifier
  RestIdentifier -> Digit RestIdentifier
  RestIdentifier -> Letter RestIdentifier
  RestIdentifier -> Empty

  Comment -> ; RestComment
  RestComment -> Ascii RestComment
  RestComment -> EOL

  Digit -> 0
  Digit -> 1
  Digit -> 2
  Digit -> 3
  Digit -> 4
  Digit -> 5
  Digit -> 6
  Digit -> 7
  Digit -> 8
  Digit -> 9

  Letter -> A
  Letter -> B
  Letter -> C
  Letter -> D
  Letter -> E
  Letter -> F
  Letter -> G
  Letter -> H
  Letter -> I
  Letter -> J
  Letter -> K
  Letter -> L
  Letter -> M
  Letter -> N
  Letter -> O
  Letter -> P
  Letter -> Q
  Letter -> R
  Letter -> S
  Letter -> T
  Letter -> U
  Letter -> V
  Letter -> W
  Letter -> X
  Letter -> Y
  Letter -> Z

  Ascii -> Digit
  Ascii -> Letter
  Ascii -> !
  Ascii -> @
  Ascii -> #
  Ascii -> $
  Ascii -> ^
  Ascii -> &
  Ascii -> *
  Ascii -> (
  Ascii -> )
  Ascii -> -
  Ascii -> _
  Ascii -> +
  Ascii -> =
  Ascii -> {
  Ascii -> }
  Ascii -> [
  Ascii -> ]
  Ascii -> <
  Ascii -> >
  Ascii -> ,
  Ascii -> .
  Ascii -> /
  Ascii -> ?
  Ascii -> :
  Ascii -> ;
  Ascii -> |
  Ascii -> \
  Ascii -> ‘
  Ascii -> ’

  Operator -> +
  Operator -> -
  Operator -> *
  Operator -> /
  Operator -> &&
  Operator -> ||
  Operator -> !
  Operator -> =
  Operator -> !=
  Operator -> >
  Operator -> <
  Operator -> >=
  Operator -> <=
             
  Reserved -> DO
  Reserved -> DEF
  Reserved -> PARAMS
  Reserved -> SET
  Reserved -> IF
  Reserved -> IFELSE
  Reserved -> LOOP
  Reserved -> RECUR
  Reserved -> BREAK
  Reserved -> PRINT
  Reserved -> READ
  Reserved -> VECTOR
  Reserved -> VECSET
  Reserved -> VECGET
  Reserved -> GOTO
  Reserved -> IFGOTO
  Reserved -> FOR
  Reserved -> WHILE
  Reserved -> #
  Reserved -> Boolean

  Boolean -> TRUE
  Boolean -> FALSE

</lexicon>